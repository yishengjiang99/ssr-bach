import test from 'ava';
import { cent2hz } from './centTone';
import { LFO } from './LFO';
import { RenderCtx } from './render-ctx';
import { Runtime } from './runtime';
import { SF2File } from './sffile';
import { loop } from './Utils';
import { std_drums, std_inst_names } from './utilv1';
import { SFZone } from './Zone';
const ctx = new RenderCtx(new SF2File('file.sf2'));
test('lfo', (t) => {
  const lf = new LFO(-12000, 1200, { pitch: 3 }, 4000);
  const zone = new SFZone();
  zone.modLFO = lf;
  const rt = new Runtime(zone, { key: 45, velocity: 127, channel: 0 }, ctx);
  t.assert(lf.effects.pitch == 3);
  lf.shift(4001);
  console.log(lf, cent2hz(1200));
  t.assert(lf.cycles == Math.floor(cent2hz(1200) * 4));
  loop(4000, () => console.log(lf.shift()));
  std_inst_names.filter((f) => f.includes('tuba'));
});
