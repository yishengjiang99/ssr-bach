"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.adsrs = exports.getSample = exports.init = void 0;
const Module = require("../sample.wasmmodule.js");
const init = async () => {
    return new Promise((resolve) => {
        Module["onRuntimeInitialized"] = function () {
            resolve();
        };
    });
};
exports.init = init;
const getSample = function (note) {
    const bytes = note.durationTime * 1000 * 48 * 2 * Float32Array.BYTES_PER_ELEMENT;
    Module._malloc();
    if (note.instrument.percussion) {
        const ptr = Module._malloc(bytes);
        Module._drumSample(note.instrument.number, note.midi, note.durationTime * 100, note.velocity * 0x7f);
        return Buffer.from(Module.HEAPF32.subarray(ptr >> 2, (ptr + bytes) >> 2).buffer);
    }
    else {
        const ptr = Module._malloc(bytes);
        Module._sample(note.instrument.number, note.midi, note.durationTime * 100, note.velocity * 0x7f);
        return Buffer.from(Module.HEAPF32.subarray(ptr >> 2, (ptr + bytes) >> 2).buffer);
    }
};
exports.getSample = getSample;
exports.init().then((d) => {
    process.stdout.write(exports.getSample({
        instrument: {
            percussion: false,
            number: 0,
        },
        midi: 33,
        durationTime: 0.444,
    }));
    process.stdout.write(exports.getSample({
        instrument: {
            percussion: false,
            number: 0,
        },
        midi: 23,
        durationTime: 0.444,
    }));
    process.stdout.write(exports.getSample({
        instrument: {
            percussion: false,
            number: 0,
        },
        midi: 35,
        durationTime: 0.444,
    }));
});
/*
envelop params extracted form Fluid_R3.sf2
*/
exports.adsrs = {
    0: [0.008, 0.0, 26.893143, 0.0, 1.42982],
    1: [0.0, 0.0, 28.657349, 0.0, 1.980457],
    2: [0.0, -2079.0, 5888.0, 0.0, 1.050323],
    3: [0.0, 0.0, 28.657349, 0.0, 1.980457],
    4: [0.0, 0.0, 5888.0, 0.0, 0.200036],
    5: [0.0, 0.0, 3.000078, 0.0, 0.5],
    6: [0.0, -386.0, 12.000312, 0.0, 1.0],
    7: [0.0, -2400.0, 3986.0, 0.0, 0.200036],
    8: [0.0, 0.0, 6.000156, 0.000016, 2.550594],
    9: [0.0, 0.002499, 5.068879, 0.0, 4.778861],
    10: [0.0, 0.0, 1516.0, 0.0, 2.550594],
    11: [0.0, 0.400072, 8.559343, 0.000016, 1.500039],
    12: [0.0, 0.0, 9.601989, 0.0, 9.601989],
    13: [0.0, 0.0, 2.370186, 1.0, 2.370186],
    14: [0.0, 0.51614, 10.398715, 0.0, 5.461006],
    15: [0.0, 0.924984, 10.398715, 0.0, 7.889862],
    16: [0.0, 0.0, 0.0, 1.0, 0.150031],
    17: [0.0, 0.0, 0.0, 1.0, 0.084008],
    18: [0.0, 0.0, 0.0, 1.0, 0.084008],
    19: [0.006, 0.0, 0.0, 1.0, 1.060075],
    20: [0.0, 0.0, 0.0, 1.0, 0.215511],
    21: [0.0, 0.0, 1.0, 0.501187, 0.215511],
    22: [0.006, 0.0, 0.0, 1.0, 0.282078],
    23: [0.0, 0.0, 0.0, 1.0, 0.3018],
    24: [0.0, 1.449779, 4569.0, 0.000016, 0.720298],
    25: [0.0, -1586.0, 5186.0, 0.000016, 0.390033],
    26: [0.0, 0.009998, 18.000937, 0.0, 0.383997],
    27: [0.008, 1.500039, 4901.0, 0.0, 0.400072],
    28: [0.0, 0.0, 1359.0, 0.0, 0.200036],
    29: [0.006, 0.0, 22.303009, 0.000016, 0.343092],
    30: [0.0, 0.100018, 8000.0, 0.0, 0.600124],
    31: [0.0, 0.0, 10.697239, 0.0, 0.243023],
    32: [0.006, -1817.0, 2834.0, 0.000016, 1.099997],
    33: [0.0, 0.0, 5186.0, 0.0, 0.25807],
    34: [0.0, 0.0, 5186.0, 0.0, 0.486047],
    35: [0.006, -1586.0, 2887.0, 0.000016, 0.25],
    36: [0.0, 0.0, 4569.0, 0.0, 0.100018],
    37: [0.0, 0.0, 4569.0, 0.0, 0.100018],
    38: [0.0, 0.0, 22.705975, 0.0, 0.5],
    39: [0.0, 0.0, 1.207202, 0.000016, 0.300062],
    40: [0.0, 0.0, 0.0, 1.0, 0.400072],
    41: [0.015999, 0.0, 0.0, 1.0, 0.337587],
    42: [0.050009, 0.0, 0.0, 1.0, 0.600124],
    43: [0.006, 0.0, 9.998188, 0.707946, 0.600124],
    44: [0.720298, 8.47081, 23.303907, 0.831764, 1.19127],
    45: [0.0, 0.0, 4.0, 0.000016, 4.0],
    46: [0.0, -11959.0, 3986.0, 0.000016, 4.999094],
    47: [0.0, 0.0, 2447.0, 0.0, 2.0],
    48: [0.160058, 8.47081, 23.303907, 0.831764, 1.700352],
    49: [0.880157, 8.47081, 23.303907, 0.831764, 2.040845],
    50: [0.25, 0.0, 0.0, 1.0, 3.000078],
    51: [0.200036, 0.0, 0.0, 1.0, 4.0],
    52: [0.066025, 0.0, 0.100018, 1.0, 1.200249],
    53: [0.0, 0.78187, 28.197594, 0.860994, 0.834124],
    54: [0.0, 0.300062, 6.40116, 0.922571, 1.899781],
    55: [0.008, 0.0, 0.0, 1.0, 0.840411],
    56: [0.009998, 0.0, 1.0, 1.0, 0.240093],
    57: [0.009998, 0.0, 0.0, 1.0, 0.400072],
    58: [0.073514, 0.00157, 95.725639, 0.47863, 0.269963],
    59: [0.009998, 0.0, 1.0, 1.0, 0.240093],
    60: [0.0, 0.0011, 25.325167, 0.269153, 0.435024],
    61: [0.008, 0.0, 0.0, 1.0, 0.523042],
    62: [0.050009, 0.0, 4.970301, 0.47863, 0.200036],
    63: [0.639123, 0.285026, 5.679773, 0.49545, 0.400072],
    64: [0.0, 0.0, 17.742859, 0.501187, 0.432019],
    65: [0.008, 0.77602, 70.481209, 0.489779, 0.204004],
    66: [0.0, 0.0, 21.995958, 0.501187, 0.348082],
    67: [0.0, 0.0, 14.697512, 0.501187, 0.343092],
    68: [0.0, 0.00449, 101.593658, 0.794328, 0.29152],
    69: [0.0, 0.0, 0.0, 1.0, 0.240093],
    70: [0.00586, 0.0, 0.0, 1.0, 0.200036],
    71: [0.008, 0.0, 0.0, 1.0, 0.215014],
    72: [0.0, 0.002499, 61.712902, 0.402717, 0.488862],
    73: [0.008, 0.0, 0.0, 1.0, 0.25],
    74: [0.0, 0.0, 0.0, 1.0, 0.100018],
    75: [0.0, 0.0, 1.500039, 0.000016, 0.300062],
    76: [0.079983, 0.0, 29.995346, 0.354813, 0.450105],
    77: [0.0, 0.0, 0.0, 1.0, 0.120047],
    78: [0.0, 0.0, 16.0, 0.794328, 0.200036],
    79: [0.0, 0.0, 0.0, 1.0, 4.999094],
    80: [0.0, 0.0, 12.000312, 0.562341, 0.300062],
    81: [0.0, 0.0, 1.0, 1.0, 0.5],
    82: [0.050009, 0.0, 1.0, 1.0, 0.343092],
    83: [0.020007, 0.0, 0.923382, 0.630957, 0.25],
    84: [0.032558, 0.0, 1752.0, 0.334965, 0.300062],
    85: [0.0, 0.0, 0.0, 1.0, 0.143008],
    86: [0.0, 0.0, 0.0, 1.0, 1.0],
    87: [0.0, 0.0, 0.709972, 1.0, 0.100018],
    88: [0.0, 0.0, 19.996376, 0.000016, 1.500039],
    89: [0.800145, 8.47081, 23.303907, 0.831764, 4.531536],
    90: [0.040014, 0.0, 3.000078, 0.251189, 1.200249],
    91: [0.050009, 0.0, 10.003964, 0.358922, 3.830413],
    92: [0.800145, 0.0, 29.995346, 0.158489, 6.000156],
    93: [0.100018, 0.0, 12.772774, 0.398107, 4.0],
    94: [0.030012, 0.0, 0.009998, 1.0, 2.271009],
    95: [0.100018, 0.0, 0.009998, 1.0, 6.952346],
    96: [0.025005, 0.0, 0.009998, 1.0, 2.838247],
    97: [0.300062, 0.0, 0.009998, 1.0, 3.000078],
    98: [0.0, 0.0, 12.000312, 0.000016, 4.999094],
    99: [0.060023, 0.72489, 4569.0, 0.501187, 6.000156],
    100: [0.008, 0.0, 9.998188, 0.000016, 4.0],
    101: [0.767107, 0.0, 0.0, 1.0, 5.010658],
    102: [0.0, 0.003, 2.817014, 0.412098, 3.799563],
    103: [0.050009, 0.0, 1.0, 1.0, 4.0],
    104: [0.0, 0.0, 0.0, 1.0, 3.500352],
    105: [0.0, 0.0, 2484.0, 0.000016, 0.750019],
    106: [0.0, 0.0, 2.237157, 0.000016, 2.237157],
    107: [0.0, -11959.0, 3986.0, 0.000016, 2.250117],
    108: [0.0, 0.031999, 2.439637, 0.0, 1.04006],
    109: [0.089985, 0.0, 0.0, 1.0, 0.343092],
    110: [0.0, 0.0, 0.0, 1.0, 0.400072],
    111: [0.012, 0.0, 1.670176, 0.767361, 0.243023],
    112: [0.0, 0.0, 3.810552, 0.0, 2.719485],
    113: [0.0, 0.0, 1.500039, 0.000016, 1.500039],
    114: [0.0, 0.0, 1.0, 0.000016, 1.0],
    115: [0.0, 0.0, 1.219819, 0.0, 1.219819],
    116: [0.0, 0.137977, 2.439637, 0.0, 2.87953],
    117: [0.0, 0.0, 25.005377, 0.000016, 25.005377],
    118: [0.0, 0.0, 0.0, -386.0, 1902.0],
    119: [0.0, 0.0, 0.0, 0.0, 0.008],
    120: [0.0, 0.0, 0.008, 0.0, 0.750019],
    121: [0.0, 0.0, 4.950245, 0.0, 0.0],
    122: [0.020007, 0.0, 0.923382, 0.630957, 0.25],
    123: [0.0, 0.0, 1.0, 0.000016, 1.0],
    124: [-0.074, 0.0, 1.419943, 0.0, 20.594208],
    125: [0.0, 0.0, 0.0, -625207811333763197276977014297853952.0, 0.0],
    126: [0.006201, 0.0, 0.0, 1.0, 9.998188],
};
